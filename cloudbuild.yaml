steps:
# This step builds the container image.
- name: 'gcr.io/cloud-builders/docker'
  args:
  - 'build'
  - '-t'
  - 'gcr.io/$PROJECT_ID/todo-api-postgres:$SHORT_SHA'
  - '.'
# This step pushes the image to Artifact Registry
# The PROJECT_ID and SHORT_SHA variables are automatically
# replaced by Cloud Build.
- name: 'gcr.io/cloud-builders/docker'
  args:
  - 'push'
  - 'gcr.io/$PROJECT_ID/todo-api-postgres:$SHORT_SHA'
# Access the github access private key file from Secret Manager, and setup SSH
- name: 'gcr.io/cloud-builders/git'
  secretEnv: ['SSH_KEY']
  entrypoint: 'bash'
  args:
  - -c
  - |
    echo "$$SSH_KEY" >> /root/.ssh/id_rsa
    chmod 400 /root/.ssh/id_rsa
    cp known_hosts.github /root/.ssh/known_hosts
  volumes:
  - name: 'ssh'
    path: /root/.ssh
# This step clones the repository containing three-tier-web-app tf config
- name: 'gcr.io/cloud-builders/git'
  args:
  - clone
  - git@github.com:parimalapg/make-it-mine-three-tier-web-app.git
  volumes:
  - name: 'ssh'
    path: /root/.ssh
# This step creates a new commit in dedicated branch of tf config repo
- name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
    cd make-it-mine-three-tier-web-app && \
    git checkout cloudbuild-ci-cd-pipeline && \
    sed -i "s/COMMIT_SHA/${SHORT_SHA}/g" main.tf && \
    git add main.tf && \
    git commit -m "Built from commit ${COMMIT_SHA} of repository three-tier-web-app source code
    Author: $(git log --format='%an <%ae>' -n 1 HEAD)" && \
    git push origin cloudbuild-ci-cd-pipeline

availableSecrets:
  secretManager:
  - versionName: projects/$PROJECT_ID/secrets/three-tier-web-app-git-access/versions/latest
    env: 'SSH_KEY'